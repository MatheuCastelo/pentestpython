import socket, sys
from multiprocessing import Process

'''
Função que recebe uma conecção e responde a mesma coisa que recebe
:isConnected = var bool define loop
:data = data send from client
:clientSocket = socket with client
'''
def clientHandler(clientSocket):
    isConnected = True
    while isConnected:
        data = clientSocket.recv(1024)
        if data:
            clientSocket.send(data)
        else:
            clientSocket.close()
            isConnected = False

'''
Create socket
Listening...
:s = var socket TCP
setsockopt = reutilize socket
'''
try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    s.bind(('', int(sys.argv[1]))) #tuple
    s.listen(10)
except:
    print(f"Error")
    s.close()


'''
Loop connection
:clientSocket = socket with client
:addr = tuple IP/PORT client
:clientIP = <-
:clientPort = <-
Process = callback function with args(tuple), can comunicate and process two or more clients at the same time
'''
while True:
    (clientSocket, (clientIP, clientPort)) = s.accept()
    print(f"Client: {clientIP}:{clientPort}")
    Process(target=clientHandler, args=(clientSocket,)).start()

'''
DIFERENTE DO MUTITHREAD O PROCESS ALOCA EM PROCESSOS DIFERENTES, 
OU SEJA EM ESPAÇOS DE MEMORIA DIFERENTES
'''